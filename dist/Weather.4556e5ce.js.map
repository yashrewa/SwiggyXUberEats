{"mappings":"6YAAA,IAAAA,EAAAC,EAAA,S,iBAwDAC,EAtDe,KACX,MAAOC,EAAaC,IAAkBC,cAAS,KACxCC,EAAUC,IAAeF,cAAS,WAClCG,EAASC,IAAcJ,cAAS,KAChCK,EAAWC,IAAgBN,cAAS,IAsB3C,OAnBAO,gBAAU,MAKVC,iBACI,MAAMC,QAAYC,MAAM,mFAAmFT,EAAS,YAC9GU,QAAaF,EAAKE,OAExBP,EAAWO,EACf,CATIC,GAUJJ,iBACI,MAAMC,QAAaC,MAAM,qFAAqFT,EAAS,YACjHU,QAAaF,EAAKE,OACxBE,QAAQC,IAAIH,GACZL,EAAaK,EAAKN,UACtB,CAdIU,KACF,CAACd,IAgBqB,IAAjBE,EAAQa,QAAiC,IAAnBX,EAAUW,QAAY,EAAArB,EAAAsB,KAAC,M,SAAG,aACnD,EAAAtB,EAAAuB,MAAAvB,EAAAwB,SAAA,C,WACI,EAAAxB,EAAAuB,MAAC,OAAIE,UAAU,c,WACf,EAAAzB,EAAAsB,KAAC,SAAMI,KAAK,OAAOC,YAAY,iBAAiBC,GAAG,sBAAsBC,MAAO1B,EAAa2B,SAAWC,GAAK3B,EAAe2B,EAAEC,OAAOH,UACrI,EAAA7B,EAAAsB,KAAC,UAAOM,GAAG,qBAAqBK,QAAS,KACtB,IAAb9B,GAA0C,iBAAdA,EAC9B+B,MAAM,wBAEN3B,EAAYJ,I,SAGb,eAEH,EAAAH,EAAAuB,MAAC,OAAIE,UAAU,e,WAAe,EAAAzB,EAAAsB,KAAC,M,SAAId,GAASF,UAAU6B,QAClD,EAAAnC,EAAAsB,KAAC,M,SAAId,GAASF,UAAU8B,aACxB,EAAApC,EAAAsB,KAAC,OAAIe,IAAK7B,GAAS8B,SAASC,WAAWC,QACvC,EAAAxC,EAAAsB,KAAC,M,SAAId,GAAS8B,SAASC,WAAWE,QAClC,EAAAzC,EAAAuB,MAAC,M,UAAG,gBAAcf,GAAS8B,SAASI,OAAO,UAC3C,EAAA1C,EAAAuB,MAAC,M,UAAG,cAAYf,GAAS8B,SAASK,YAAY,SAC9C,EAAA3C,EAAAuB,MAAC,M,UAAG,SAAOf,GAAS8B,SAASM,SAAS,YACtC,EAAA5C,EAAAuB,MAAC,M,UAAG,cAAU,EAAAvB,EAAAsB,KAAC,O,SAAKd,GAAS8B,SAASO,eACtC,EAAA7C,EAAAsB,KAAC,O,UAAI,EAAAtB,EAAAuB,MAAC,M,UAAG,YAAUb,GAAWoC,OAAOC,QAAQ,WAASrC,GAAWoC,OAAOE,iBAInF,C","sources":["src/components/Weather.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst Weather= () => {\r\n    const [searchInput, setSearchInput] = useState(\"\");\r\n    const [location, setLocation] = useState(\"indore\");\r\n    const [weather, setWeather] = useState([]);\r\n    const [astronomy, setAstronomy] = useState([]);\r\n\r\n\r\n    useEffect(()=>{\r\n        getRealTimeWeatherInfo()\r\n        getSportsInfo()\r\n    },[location])\r\n    \r\n    async function getRealTimeWeatherInfo() {\r\n        const data= await fetch(\"http://api.weatherapi.com/v1/current.json?key=976a9e6f12bf436597f125218232101&q=\"+location+\"&aqi=yes\")\r\n        const json = await data.json();\r\n        // console.log(json)\r\n        setWeather(json)\r\n    }\r\n    async function getSportsInfo(){\r\n        const data = await fetch(\"http://api.weatherapi.com/v1/astronomy.json?key=976a9e6f12bf436597f125218232101&q=\"+location+\"&aqi=yes\");\r\n        const json = await data.json();\r\n        console.log(json)\r\n        setAstronomy(json.astronomy);\r\n    }\r\n//48.8567,2.3508\r\n    \r\n    return weather.length===0 && astronomy.length===0? <h1>Loading</h1>:(\r\n        <>\r\n            <div className=\"search-area\">\r\n            <input type=\"text\" placeholder=\"enter location\" id=\"search-area-weather\" value={searchInput} onChange={(e)=> setSearchInput(e.target.value)} />\r\n            <button id=\"search-btn-weather\" onClick={()=>{\r\n               if(searchInput==\"\"  ||  typeof searchInput!==\"string\"){\r\n                alert(\"enter valid location\")\r\n               }else{\r\n                setLocation(searchInput);\r\n               }\r\n               \r\n            }}>Search</button>\r\n            </div>\r\n            <div className=\"weather-info\"><h1>{weather?.location?.name}</h1>\r\n                <h3>{weather?.location?.localtime}</h3>\r\n                <img src={weather?.current?.condition?.icon}></img>\r\n                <h3>{weather?.current?.condition?.text}</h3>\r\n                <h3>Temperature: {weather?.current?.temp_c} °c</h3>\r\n                <h3>Real Feel: {weather?.current?.feelslike_c}°c</h3>\r\n                <h3>Wind: {weather?.current?.gust_kph} km/h</h3>\r\n                <h3>Humidity: <div>{weather?.current?.humidity}</div></h3>\r\n                <div><h3>Sunrise: {astronomy?.astro?.sunrise} Sunset:{astronomy?.astro?.sunset}</h3></div>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Weather\r\n\r\n// 976a9e6f12bf436597f125218232101"],"names":["$iq6Qi","parcelRequire","$6499bcc771cbc0ce$export$2e2bcd8739ae039","searchInput","setSearchInput","useState","location","setLocation","weather","setWeather","astronomy","setAstronomy","useEffect","async","data","fetch","json","getRealTimeWeatherInfo","console","log","getSportsInfo","length","jsx","jsxs","Fragment","className","type","placeholder","id","value","onChange","e","target","onClick","alert","name","localtime","src","current","condition","icon","text","temp_c","feelslike_c","gust_kph","humidity","astro","sunrise","sunset"],"version":3,"file":"Weather.4556e5ce.js.map"}